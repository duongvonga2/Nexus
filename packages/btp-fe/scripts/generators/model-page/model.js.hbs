import { notification } from 'antd';
import api from 'server/api';
import { f2Qp } from 'utils/f2Qp';

const {{camelCase model}}Model = {
  name: '{{camelCase model}}Model',
  state: {
    {{camelCase model}}s: [],
  },
  reducers: {
    add(state, payload) {
      return {
        ...state,
        {{camelCase model}}s: [payload, ...state.{{camelCase model}}s],
      };
    },
    remove(state, payload) {
      return {
        ...state,
        {{camelCase model}}s: state.{{camelCase model}}s.filter((item) => item.id !== payload),
      };
    },
    edit(state, payload) {
      return {
        ...state,
        {{camelCase model}}s: state.{{camelCase model}}s.map((item) => {
          if (item.id == payload.id) {
            return payload;
          }
          return item;
        }),
      };
    },
    set{{properCase model}}s(state, payload) {
      return {
        ...state,
        {{camelCase model}}s: payload,
      };
    },
  },
  effects: () => ({
    async fetch{{properCase model}}s(p) {
      try {
        const { data } = await api.get(`/{{kebabCase model}}${f2Qp(p)}`);
        this.set{{properCase model}}s(data.results);
      } catch (err) {
        // TODO handle error
        console.log(err);
      }
    },
    async create(payload) {
      try {
        await api.post(`/{{kebabCase model}}`, payload);

        this.add(payload);

        notification.success({
          message: 'Successfully create item',
        });
      } catch (err) {
        // TODO handle error
        console.log(err);
      }
    },
    async update(payload) {
      try {
        await api.put(`/{{kebabCase model}}`, payload);

        this.edit(payload);

        notification.success({
          message: 'Successfully update item',
        });
      } catch (err) {
        // TODO handle error
        console.log(err);
      }
    },
    async delete(id) {
      try {
        await api.delete(`/{{kebabCase model}}/${id}`);

        this.remove(id);

        notification.success({
          message: 'Success',
          description: '{{camelCase model}} Deleted!',
        });
      } catch (err) {
        // TODO handle error
        console.log(err);
      }
    },
  }),
};

export default {{camelCase model}}Model;
